<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->
<mapper namespace="com.fjp.mapper.CustomerMapper">
    <!--
          id = "接口中的方法名"
          parameterType = "接口中传入方法的参数类型"
          resultType = "返回实体类对象：包.类名"  处理结果集 自动封装
          注意:sql语句后不要出现";"号
              查询：select标签
              增加：insert标签
              修改：update标签
              删除：delete标签
      -->
    <!--定义返回类型resultMap-->
    <!--定义返回类型resultMap-->
    <resultMap id="BaseResultMap" type="com.fjp.pojo.Customer">
        <id column="identity" jdbcType="VARCHAR" property="identity" />
        <result column="custname" jdbcType="VARCHAR" property="custname"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="career" jdbcType="VARCHAR" property="career"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
    </resultMap>

    <!--定义sql片段-->
    <sql id="Base_Colum_list">
        identity,custname,sex,address,phone,career,createtime
    </sql>
    <!--查询客户信息-->
    <select id="findAllCustomer" resultMap="BaseResultMap">
        select <include refid="Base_Colum_list"/> from customer
        <where>
            <if test="identity != null and identity != ''">
                and identity like concat("%",#{identity},"%")
            </if>
            <if test="custname != null and custname != ''">
                and custname like concat("%",#{custname},"%")
            </if>
            <if test="phone != null and phone != ''">
                and phone like concat("%",#{phone},"%")
            </if>
            <if test="career != null and career != ''">
                and career like concat("%",#{career},"%")
            </if>
            <if test="address != null and address != ''">
                and address like concat("%",#{address},"%")
            </if>
            <if test="sex != null">
                and sex=#{sex}
            </if>
        </where>

    </select>


<!--<select id="findAllCustomer" resultType="com.fjp.pojo.Customer" parameterType="Customer">-->
<!--   order by createtime desc  select * from customer-->

<!--</select>-->

<!--    添加客户信息-->
    <insert id="addCustomer" parameterType="com.fjp.pojo.Customer">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="identity !=null">
                identity,
            </if>
            <if test="custname !=null">
                custname,
            </if>
            <if test="sex !=null">
                sex,
            </if>
            <if test="address !=null">
                address,
            </if>
            <if test="phone !=null">
                phone,
            </if>
            <if test="career !=null">
                career,
            </if>
            <if test="createtime !=null">
                createtime,
            </if>
        </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="identity != null">
                    #{identity,jdbcType=VARCHAR},
                </if>
                <if test="custname != null">
                    #{custname,jdbcType=VARCHAR},
                </if>
                <if test="sex != null">
                    #{sex,jdbcType=INTEGER},
                </if>
                <if test="address != null">
                    #{address,jdbcType=VARCHAR},
                </if>
                <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
                </if>
                <if test="career != null">
                    #{career,jdbcType=VARCHAR},
                </if>
                <if test="createtime != null">
                    #{createtime,jdbcType=TIMESTAMP},
                </if>
            </trim>
    </insert>


<!--    删除客户-->
    <delete id="deleteCustomer" parameterType="java.lang.String">
        delete from customer
        where identity=#{indentity,jdbcType=VARCHAR}
    </delete>

<!--    修改客户信息-->
    <update id="updateCustomer" parameterType="com.fjp.pojo.Customer">
        update customer
        <set>
            <if test="custname != null">
                custname=#{custname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex=#{sex,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address=#{address,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone=#{phone,jdbcType=VARCHAR},
            </if>
            <if test="career != null">
                career=#{career,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime=#{createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
            where identity = #{identity,jdbcType=VARCHAR}
    </update>
    
    <select id="queryCustomerById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select <include refid="Base_Colum_list"/>
        from customer
        where identity = #{indentity,jdbcType=VARCHAR}
    </select>
</mapper>
